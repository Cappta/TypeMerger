name: $(Date:yyyy).$(Date:MM).$(Date:dd)$(Rev:.rr)

phases:
- phase: Validate

  queue:
    name: Hosted VS2017
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build Release
    inputs:
      projects: '**/*.csproj'
      arguments: '--configuration Release'
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Build Debug
    inputs:
      projects: '**/*.csproj'
      arguments: '--configuration Debug'
    condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Test Release
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration Release'
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Test Debug
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration Debug'
    condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))


- phase: Release
  dependsOn: Validate
  queue:
    name: OfficeDocker
  steps:
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: restore
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build Release
    inputs:
      projects: '**/*.csproj'
      arguments: '--configuration Release'
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Build Debug
    inputs:
      projects: '**/*.csproj'
      arguments: '--configuration Debug'
    condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Pack Release
    inputs:
      command: pack
      configuration: Release
      versioningScheme: byBuildNumber
    condition: and(succeeded(), eq(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Pack Prerelease
    inputs:
      command: custom
      projects: '**/*.csproj'
      custom: pack
      arguments: ' --output $(Build.ArtifactStagingDirectory) /p:Configuration=Debug /p:PackageVersion=$(Build.BuildNumber)-PR$(System.PullRequest.PullRequestNumber)'
      versioningScheme: byBuildNumber
    condition: and(succeeded(), ne(variables['Build.SourceBranchName'], 'master'))

  - task: DotNetCoreCLI@2
    displayName: Nuget Push
    inputs:
      command: custom
      custom: nuget
      arguments: 'push $(Build.ArtifactStagingDirectory)/*.nupkg -s $(NugetServer) -k $(NugetApiKey)'
      versioningScheme: byBuildNumber

